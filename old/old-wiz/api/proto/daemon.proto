syntax = "proto3";
package daemon;
option go_package = "github.com/tim15/wiz/api/daemon";

import "github.com/tim15/wiz/api/proto/package.proto";
// import "github.com/golang/protobuf/ptypes/empty/empty.proto";

service Daemon {
  rpc GetVersion (Empty) returns (Version) {}
  rpc InstallPackages (PackageList) returns (Status) {}
  rpc GetPackages (Empty) returns (PackageList) {}
  rpc GetConfig (Empty) returns (Config) {}
  rpc SetConfig (Config) returns (Status) {}
}

message Version {
  string version = 1;
}

message PackageList {
  repeated pkg.Package packages = 1;
}

message Config {
  // Represents the directory used to store packages
  string package_location = 1;

  // Represents the backend used to run jobs
  enum RunBackend {
    LOCAL = 0;
    DOCKER = 1;
    // Possibilities: Kubernetes, Docker Swarm, Nomad
    // To allow for scheduling across clusters,
    // may need extensions to the system for computeDevice registration and consideration in scheduling
  }
  RunBackend run_backend = 2;

  // Determines which compute devices to use. Can be `all` or a list of devices. Defaults to all.
  string use_compute_devices = 3;
}

message Status {
  bool status = 1;
}

message Empty {

}
